{"version":3,"sources":["components/ErrorIndicator/png/death-star-icon.png","components/Header/index.js","components/Header/Header.js","services/SwapiService.js","components/Spinner/index.js","components/Spinner/Spinner.js","components/RandomPlanet/PlanetView.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/RandomPlanet/RandomPlanet.js","components/RandomPlanet/index.js","components/HOCHelper/withDataList.js","components/HOCHelper/withDataDetails.js","components/SwapiServiceContext/SwapiServiceContext.js","components/HOCHelper/SwapiService.js","components/HOCHelper/compose.js","components/ItemList/ItemList.js","components/ItemList/index.js","components/SWComponents/List/withChildFunction.js","components/SWComponents/List/PersonList.js","components/SWComponents/List/PlanetList.js","components/SWComponents/List/StarshipList.js","components/Record/index.js","components/Record/Record.js","components/ItemDetails/Attention.js","components/ItemDetails/index.js","components/ItemDetails/ItemDetails.js","components/SWComponents/Details/PersonDetails.js","components/SWComponents/Details/PlanetDetails.js","components/SWComponents/Details/StarshipDetails.js","components/Row/index.js","components/Row/Row.js","components/Pages/PeoplePage.js","components/Pages/PlanetsPage.js","components/Pages/StarshipsPage.js","components/Pages/LoginPage.js","components/Pages/SecretPage.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","to","SwapiService","_apiBase","_apiImageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","transformPerson","getPerson","id","person","getAllStarships","transformStarship","getStarship","starship","getAllPlanets","planets","transformPlanet","getPlanet","planet","getPersonImage","getPlanetImage","getStarhipImage","extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","gender","birthYear","birth_year","eyeColor","eye_color","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","Spinner","PlanetView","Fragment","src","alt","ErrorIndicator","deathStar","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","this","props","interval","setInterval","hasData","errorMessage","spinner","content","Component","defaultProps","withDataList","View","itemList","getData","data","withDataDetails","image","attention","updateItem","prevProps","itemId","getImage","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","mapMethodsToProps","Wrapped","serviceProps","compose","funcs","component","reduceRight","prevResult","f","ItemList","onItemSelected","renderItems","children","element","label","key","onClick","renderList","withChildFunction","fn","renderName","PersonList","SwapiContextDetails","PlanetList","StarshipList","Record","field","Attention","ItemDetails","selectText","Children","child","cloneElement","PersonDetails","PlanetDetails","StarshipDetails","Row","LeftRow","RightRow","withRouter","history","params","push","LoginPage","isLoggedIn","onLogin","SecretPage","App","hasError","value","path","exact","render","PeoplePage","PlanetsPage","StarshipsPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a5ca1213.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star-icon.83f8271f.png\";","import Header from \"./Header\";\nexport default Header;","import React from \"react\";\nimport \"./Header.css\";\n\nimport {Link} from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <div className=\"header d-flex\">\n            <h3>\n                <Link to=\"/star-db/\">Star DB</Link>\n            </h3>\n            <ul className=\"d-flex\">\n                <li>\n                    <Link to=\"/people/\">People</Link>\n                </li>\n                <li>\n                    <Link to=\"/planets/\">Planets</Link>\n                </li>\n                <li>\n                    <Link to=\"/starships/\">Starships</Link>\n                </li>\n                {/*<li>\n                    <Link to=\"/login\">Login</Link>\n                </li>\n                <li>\n                    <Link to=\"/secret\">Secret</Link>\n                </li>*/}\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","export default class SwapiService {\n    _apiBase = `https://swapi.co/api`;\n    _apiImageBase = `https://starwars-visualguide.com/assets/img`;\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) throw new Error(`Could not fetch ${url}, \n                                server end with status ${res.status}`);\n\n        return await res.json();\n    };\n\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this.transformPerson);\n    };\n\n    getPerson = async (id) => {\n        const person = await this.getResource(`/people/${id}`);\n        return this.transformPerson(person);\n    };\n\n    getAllStarships = async () => {\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this.transformStarship);\n    };\n\n    getStarship = async (id) => {\n        const starship = await this.getResource(`/starships/${id}`);\n        return this.transformStarship(starship);\n    };\n\n    getAllPlanets = async () => {\n        const planets = await this.getResource(`/planets/`);\n        return planets.results.map(this.transformPlanet);\n    };\n\n    getPlanet = async (id) => {\n        const planet = await this.getResource(`/planets/${id}`);\n        return this.transformPlanet(planet);\n    };\n\n    getPersonImage = async ({id}) => {\n        return `${this._apiImageBase}/characters/${id}.jpg`;\n    };\n\n    getPlanetImage = async ({id}) => {\n        return `${this._apiImageBase}/planets/${id}.jpg`;\n    };\n\n    getStarhipImage = async ({id}) => {\n        return `${this._apiImageBase}/starships/${id}.jpg`;\n    };\n\n    extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    };\n\n    transformPlanet = (planet) => {\n        return {\n            id: this.extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        }\n    };\n\n    transformPerson = (person) => {\n        return {\n            id: this.extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        }\n    };\n\n    transformStarship = (starship) => {\n        return {\n            id: this.extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.cost_in_credits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargo_capacity\n\n        }\n    };\n}\n\n","import Spinner from \"./Spinner\";\nexport default Spinner;","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-double-ring-z9qzp30e5ak spinner\">\n            <div className=\"ldio-mr257i5fwm\">\n                <div></div>\n                <div></div>\n                <div>\n                    <div></div>\n                </div>\n                <div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Spinner;","import React from \"react\";\n\nconst PlanetView = ({planet}) => {\n    const {id, name, population, rotationPeriod, diameter} = planet;\n    return (\n        <React.Fragment>\n            <img className=\"planet-image\"\n                 src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n                 alt=\"planet\"\n            />\n            <div className=\"flex-column\">\n                <h3 className=\"planet-name\">{name}</h3>\n                <ul className=\"list-group-flush\">\n                    <li className=\"list-group-item d-flex\">\n                        <span className=\"term\">Population</span>\n                        <span className=\"term\">{population}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex\">\n                        <span className=\"term\">Rotation Period</span>\n                        <span className=\"term\">{rotationPeriod}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex\">\n                        <span className=\"term\">Diameter</span>\n                        <span className=\"term\">{diameter}</span>\n                    </li>\n                </ul>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default PlanetView;","import ErrorIndicator from \"./ErrorIndicator\";\nexport default ErrorIndicator;","import React from \"react\";\nimport \"./ErrorIndicator.css\";\nimport deathStar from \"./png/death-star-icon.png\"\n\nconst ErrorIndicator = () => {\n    return (\n        <div className=\"error-indicator\">\n        <span>\n        <img\n            className=\"star\"\n            src={deathStar}\n            alt=\"error\"\n        />\n        </span>\n            <span className=\"boom\">BOOM!</span>\n            <span>\n            something has gone terribly wrong\n        </span>\n            <span className=\"end-stroke\">\n            (but we already sent the droids)\n        </span>\n        </div>\n    );\n};\n\nexport default ErrorIndicator;","import React, {Component} from \"react\";\nimport \"./RandomPlanet.css\";\nimport SwapiService from \"../../services/SwapiService\";\nimport Spinner from \"../Spinner\";\nimport PlanetView from \"./PlanetView\";\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport PropTypes from \"prop-types\";\n\nexport default class RandomPlanet extends Component {\n    static defaultProps = {\n        updateInterval: 200000\n    };\n\n    static propTypes = {\n        updateInterval: PropTypes.number\n    };\n\n    swapiService = new SwapiService();\n\n    state = {\n        planet: {},\n        loading: true,\n        error: false\n    };\n\n    componentDidMount() {\n        const {updateInterval} = this.props;\n        this.updatePlanet();\n        this.interval = setInterval(this.updatePlanet, updateInterval);\n    }\n\n    /*componentWillUnmount() {\n        clearInterval(this.interval);\n    }*/\n\n    onPlanetLoaded = (planet) => {\n        this.setState({\n            planet,\n            loading: false,\n            error: false\n        })\n    };\n\n    onError = (err) => {\n        return this.setState({\n            error: true,\n            loading: false,\n        })\n    };\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random() * 17) + 2;\n        this.swapiService\n            .getPlanet(id)\n            .then(this.onPlanetLoaded)\n            .catch(this.onError);\n    };\n\n    render() {\n        const {planet, loading, error} = this.state;\n\n        const hasData = !(loading || error);\n\n        const errorMessage = error ? <ErrorIndicator/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = hasData ? <PlanetView planet={planet}/> : null;\n\n        return (\n            <div className=\"random-planet jumbotron rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\n\n\n","import RandomPlanet from \"./RandomPlanet\";\nexport default RandomPlanet;","import React, {Component} from \"react\";\nimport Spinner from \"../Spinner\";\n\nconst withDataList = (View) => {\n    return class extends Component {\n        state = {\n            itemList: null\n        };\n\n        componentDidMount() {\n            const {getData} = this.props;\n            getData()\n                .then((itemList) => {\n                    this.setState({itemList});\n                });\n        }\n\n        render() {\n            const {itemList} = this.state;\n\n            if (!itemList) {\n                return <Spinner/>\n            }\n\n            return <View\n                {...this.props}\n                data={itemList}\n            />\n        }\n    };\n};\n\nexport default withDataList;","import React, {Component} from \"react\";\n\nconst withDataDetails = (View) => {\n\n    return class extends Component {\n        state = {\n            item: null,\n            image: null,\n            loading: false,\n            attention: true\n        };\n\n        componentDidMount() {\n            this.updateItem();\n        }\n\n        componentDidUpdate(prevProps) {\n            if (this.props.itemId !== prevProps.itemId) {\n                this.updateItem();\n            }\n        }\n\n        updateItem() {\n            const {getData, getImage, itemId} = this.props;\n            if (!itemId) {\n                return;\n            }\n\n            this.setState({\n                loading: true,\n                attention: false\n            });\n\n            getData(itemId)\n                .then((item) => {\n                    this.setState({\n                        item,\n                        loading: false,\n                        attention: false\n                    });\n\n                    getImage(item)\n                        .then((image) => {\n                            this.setState({image});\n                        })\n                });\n        }\n\n        render() {\n            const {item, image, loading, attention} = this.state;\n\n            return (\n                <View\n                    {...this.props}\n                    item={item}\n                    image={image}\n                    loading={loading}\n                    attention={attention}\n                />\n            )\n        }\n    }\n};\n\nexport default withDataDetails;\n\n","import React from \"react\";\n\nconst {\n    Provider: SwapiServiceProvider,\n    Consumer: SwapiServiceConsumer\n} = React.createContext();\n\nexport {\n    SwapiServiceProvider,\n    SwapiServiceConsumer\n};","import React from \"react\";\nimport {SwapiServiceConsumer} from \"../SwapiServiceContext\";\n\nconst SwapiService = (mapMethodsToProps) => (Wrapped) => {\n    return (props) => {\n        return (\n            <SwapiServiceConsumer>\n                {\n                    (swapiService) => {\n                        const serviceProps = mapMethodsToProps(swapiService);\n                        return (\n                            <Wrapped {...props} {...serviceProps}/>\n                        )\n                    }\n                }\n            </SwapiServiceConsumer>\n        );\n    }\n};\n\nexport default SwapiService;\n","const compose = (...funcs) => (component) => {\n    return funcs.reduceRight((prevResult, f) => f(prevResult), component);\n};\n\nexport default compose;","import React from \"react\";\nimport \"./ItemList.css\";\nimport PropTypes from \"prop-types\";\n\nconst ItemList = (props) => {\n    const {data, onItemSelected, children: renderItems} = props;\n\n    const renderList = (data) => {\n        return data.map((item) => {\n            const {id} = item;\n            const label = renderItems(item);\n\n            return (\n                <li\n                    className=\"list-group-item\"\n                    key={id}\n                    onClick={() => onItemSelected(id)}\n                >\n                    {label}\n                </li>\n            );\n        });\n    };\n\n    const element = renderList(data);\n\n    return (\n        <div className=\"item-list rounded jumbotron\">\n            {element}\n        </div>\n    );\n};\n\nItemList.defaultProps = {\n    onItemSelected: () => {}\n};\n\nItemList.propTypes = {\n    onItemSelected: PropTypes.func,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    children: PropTypes.func.isRequired\n};\n\nexport default ItemList;\n\n\n\n","import ItemList from \"./ItemList\";\nexport default ItemList;","import React from \"react\";\n\nconst withChildFunction = (fn) => (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props}>\n                {fn}\n            </Wrapped>\n        )\n    }\n};\n\nconst renderName = ({name}) => <span>{name}</span>;\n\nexport {\n    withChildFunction,\n    renderName\n};","import {withDataList} from \"../../HOCHelper\";\nimport ItemList from \"../../ItemList\";\nimport {withChildFunction, renderName} from \"./withChildFunction\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPeople\n    }\n};\n\nconst PersonList = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataList,\n    withChildFunction(renderName)\n)(ItemList);\n\nexport default PersonList;","import {withDataList} from \"../../HOCHelper\";\nimport ItemList from \"../../ItemList\";\nimport {withChildFunction, renderName} from \"./withChildFunction\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPlanets\n    }\n};\n\nconst PlanetList = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataList,\n    withChildFunction(renderName)\n)(ItemList);\n\nexport default PlanetList;","import {withDataList} from \"../../HOCHelper\";\nimport ItemList from \"../../ItemList\";\nimport {withChildFunction, renderName} from \"./withChildFunction\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllStarships\n    }\n};\n\nconst StarshipList = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataList,\n    withChildFunction(renderName)\n)(ItemList);\n\nexport default StarshipList;","import Record from \"./Record\";\nexport default Record;","import React from \"react\";\n\nconst Record = ({item, field, label}) => {\n    return (\n        <li className=\"list-group-item\">\n            {`${label}: ${item[field]}`}\n        </li>\n    )\n};\n\nexport default Record;","import React from \"react\";\n\nconst Attention = () => {\n    return (\n        <div className=\"attention-block jumbotron rounded\">\n            <span>\n                Select the item from the list!\n            </span>\n        </div>\n    )\n};\n\nexport default Attention;","import ItemDetails from \"./ItemDetails\";\nexport default ItemDetails;","import React, {Component, Fragment} from \"react\";\nimport \"./ItemDetails.css\";\n\nimport Spinner from \"../Spinner\";\nimport Attention from \"./Attention\";\n\nclass ItemDetails extends Component {\n\n    render() {\n        const {item, image, loading, attention, children} = this.props;\n        const hasData = !(loading || attention);\n\n        const selectText = attention ? <Attention/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = hasData ? (\n                <div className=\"person-details jumbotron rounded\">\n                    <img className=\"person-image\"\n                         src={image}\n                         alt=\"item\"\n                    />\n                    <div className=\"flex-column\">\n                        <h3 className=\"planet-name\">{item.name}</h3>\n                        <ul className=\"list-group-flush\">\n                            {React.Children.map(children, ((child) => {\n                                return React.cloneElement(child, {item});\n                            }))}\n                        </ul>\n                    </div>\n                </div>\n            )\n            : null;\n\n        return (\n            <Fragment>\n                {selectText}\n                {spinner}\n                {content}\n            </Fragment>\n        );\n    }\n}\n\nexport default ItemDetails;\n","import React from \"react\";\nimport Record from \"../../Record\";\nimport {withDataDetails} from \"../../HOCHelper\";\nimport ItemDetails from \"../../ItemDetails\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst PersonRecord = (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props}>\n                <Record field=\"gender\" label=\"Gender\"/>\n                <Record field=\"birthYear\" label=\"Birth Year\"/>\n                <Record field=\"eyeColor\" label=\"Eye Color\"/>\n            </Wrapped>\n        )\n    }\n};\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPerson,\n        getImage: swapiService.getPersonImage\n    }\n};\n\nconst PersonDetails = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataDetails,\n    PersonRecord\n)(ItemDetails);\n\nexport default PersonDetails;\n","import React from \"react\";\nimport Record from \"../../Record\";\nimport {withDataDetails} from \"../../HOCHelper\";\nimport ItemDetails from \"../../ItemDetails\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst PlanetRecord = (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props}>\n                <Record field=\"population\" label=\"Population\"/>\n                <Record field=\"rotationPeriod\" label=\"Rotation Period\"/>\n                <Record field=\"diameter\" label=\"Diameter\"/>\n            </Wrapped>\n        )\n    }\n};\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPlanet,\n        getImage: swapiService.getPlanetImage\n    }\n};\n\nconst PlanetDetails = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataDetails,\n    PlanetRecord\n)(ItemDetails);\n\nexport default PlanetDetails;","import React from \"react\";\nimport Record from \"../../Record\";\nimport {withDataDetails} from \"../../HOCHelper\";\nimport ItemDetails from \"../../ItemDetails\";\nimport SwapiContextDetails from \"../../HOCHelper/SwapiService\";\nimport compose from \"../../HOCHelper/compose\";\n\nconst StarshipRecord = (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props}>\n                <Record field=\"model\" label=\"Model\"/>\n                <Record field=\"manufacturer\" label=\"Manufacturer\"/>\n                <Record field=\"costInCredits\" label=\"Cost In Credits\"/>\n                <Record field=\"length\" label=\"Length\"/>\n                <Record field=\"crew\" label=\"Crew\"/>\n                <Record field=\"passengers\" label=\"Passengers\"/>\n                <Record field=\"cargoCapacity\" label=\"Cargo Capacity\"/>\n            </Wrapped>\n        )\n    }\n};\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getStarship,\n        getImage: swapiService.getStarhipImage\n    }\n};\n\nconst StarshipDetails = compose(\n    SwapiContextDetails(mapMethodsToProps),\n    withDataDetails,\n    StarshipRecord\n)(ItemDetails);\n\nexport default StarshipDetails;","import Row from \"./Row\";\nexport default Row;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Row = ({LeftRow, RightRow}) => {\n    return (\n        <div className=\"row mb-2\">\n            <div className=\"col-xl-6\">\n                {LeftRow}\n            </div>\n\n            <div className=\"col-xl-6\">\n                {RightRow}\n            </div>\n        </div>\n    );\n};\n\nRow.propTypes = {\n    LeftRow: PropTypes.node,\n    RightRow: PropTypes.node\n};\n\n\nexport default Row;","import React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {PersonList} from \"../SWComponents/List\";\nimport {PersonDetails} from \"../SWComponents/Details\";\nimport Row from \"../Row\";\n\nconst PeoplePage = ({history, match}) => {\n    const {id} = match.params;\n    \n    return (\n        <Row\n            LeftRow={<PersonList onItemSelected={(id) => history.push(id)}/>}\n            RightRow={<PersonDetails itemId={id}/>}\n        />\n    );\n};\n\nexport default withRouter(PeoplePage);","import React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {PlanetList} from \"../SWComponents/List\";\nimport {PlanetDetails} from \"../SWComponents/Details\";\nimport Row from \"../Row\";\n\nconst PlanetsPage = ({history, match}) => {\n    const {id} = match.params;\n\n    return (\n        <Row\n            LeftRow={<PlanetList onItemSelected={(id) => history.push(id)}/>}\n            RightRow={<PlanetDetails itemId={id}/>}\n        />\n    );\n};\n\nexport default withRouter(PlanetsPage);","import React from \"react\";\nimport {StarshipList} from \"../SWComponents/List\";\nimport {withRouter} from \"react-router-dom\";\n\nconst StarshipsPage = ({history}) => {\n    return (\n        <StarshipList\n            onItemSelected={(itemId) => {\n                history.push(itemId);\n            }}/>\n    );\n};\n\nexport default withRouter(StarshipsPage);","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nconst LoginPage = ({isLoggedIn, onLogin}) => {\n    if (isLoggedIn) {\n        return (\n            <Redirect to=\"/\"/>\n        )\n    }\n\n    return (\n      <div className=\"jumbotron\">\n          <p>Login to see Secret Page!!!</p>\n          <button\n              className=\"btn btn-primary\"\n              onClick={onLogin}\n          >\n              Login\n          </button>\n      </div>\n    );\n};\n\nexport default LoginPage;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nconst SecretPage = ({isLoggedIn}) => {\n    if (isLoggedIn) {\n        return (\n            <div className=\"jumbotron text-center\">\n                <h3>This page is full of secrets</h3>\n            </div>\n        );\n    }\n\n    return <Redirect to=\"/login\"/>\n};\n\nexport default SecretPage;","import App from \"./App\";\nexport default App;","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header\";\nimport RandomPlanet from \"../RandomPlanet\";\n\nimport {\n    PeoplePage,\n    PlanetsPage,\n    StarshipsPage,\n    LoginPage,\n    SecretPage\n} from \"../Pages\";\n\nimport ErrorIndicator from \"../ErrorIndicator\";\nimport SwapiService from \"../../services/SwapiService\";\nimport {SwapiServiceProvider} from \"../SwapiServiceContext\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport StarshipDetails from \"../SWComponents/Details/StarshipDetails\";\n\nexport default class App extends Component {\n    swapiService = new SwapiService();\n\n    state = {\n        hasError: false,\n        isLoggedIn: false\n    };\n\n    onLogin = () => {\n        this.setState({isLoggedIn: true});\n    };\n\n    componentDidCatch() {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div>\n                    <ErrorIndicator/>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"app\">\n\n                <SwapiServiceProvider value={this.swapiService}>\n                    <Router>\n                        <Header/>\n                        <RandomPlanet/>\n                        <Switch>\n                            <Route path=\"/star-db/\"\n                                   exact\n                                   render={() => {\n                                       return (\n                                           <div className=\"jumbotron text-center\">\n                                               <h3>Welcome to Star DB</h3>\n                                           </div>\n                                       )\n                                   }}\n                            />\n                            <Route path=\"/people/:id?\" component={PeoplePage}/>\n                            <Route path=\"/planets/:id?\" component={PlanetsPage}/>\n                            <Route path=\"/starships\" exact component={StarshipsPage}/>\n                            <Route path=\"/starships/:id\"\n                                   render={({match}) => {\n                                       const {id} = match.params;\n                                       return <StarshipDetails itemId={id}/>;\n                                   }}\n                            />\n                            <Route path=\"/login\" render={() => (\n                                <LoginPage\n                                    isLoggedIn={this.state.isLoggedIn}\n                                    onLogin={this.onLogin}\n                                />\n                            )}/>\n\n                            <Route path=\"/secret\" render={() => (\n                                <SecretPage isLoggedIn={this.state.isLoggedIn}/>\n                            )}/>\n\n                            <Route render={() => {\n                                return (\n                                    <div className=\"jumbotron text-center\">\n                                        <p>Page Not Found ;(</p>\n                                    </div>\n                                );\n                            }}/>\n\n                        </Switch>\n                    </Router>\n                </SwapiServiceProvider>\n\n            </div>\n        );\n    }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}